---
import Layout from "../../../../layouts/Layout.astro";
import NavbarManager from "../../../../components/NavbarManager.astro";
const id = Astro.params.id;
---

<Layout title="Modify employee">
  <NavbarManager />
  <h1 class="mb-4 text-4xl font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-white text-center">Modify employee</h1>
  <p class="ml-2 mb-4 text-xl font-bold leading-none tracking-tight text-gray-900 md:text-xl lg:text-xl dark:text-white">Id: {id}</p>
  <form>
    <label for="name"class="mb-2 text-sm font-medium text-gray-900 dark:text-white ml-2">Name</label>
    <input type="text" id="name" name="name" required class=" ml-2 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"/>
    <label for="lastname" class="mb-2 text-sm font-medium text-gray-900 dark:text-white ml-2">Last name</label>
    <input type="text" id="lastname" name="lastname" required class=" ml-2 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"/>
    <label for="email" class="mb-2 text-sm font-medium text-gray-900 dark:text-white ml-2">Email</label>
    <input type="email" id="email" name="email" required class=" ml-2 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"/>
    <label for="password" class="mb-2 text-sm font-medium text-gray-900 dark:text-white ml-2">Password</label>
    <input type="password" id="password" name="password" required class=" ml-2 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"/>
    <label for="type" class="mb-2 text-sm font-medium text-gray-900 dark:text-white ml-2">Type</label>
    <select id="type" name="type" required class="ml-2 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
      <option value="admin">Admin</option>
      <option value="employee">Employee</option>
    </select>
    <br>
    <button class="relative inline-flex items-center mt-5 ml-7 justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800">
      <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
        Update
      </span>
      </button>
  </form>
</Layout>

<script define:vars={{ id }}>
  let name = document.getElementById("name");
  let lastname = document.getElementById("lastname");
  let email = document.getElementById("email");
    let password = document.getElementById("password");
    let type = document.getElementById("type");
  fetch(`http://localhost/api/employes/${id}`)
    .then((response) => response.json())
    .then((data) => {
        name.value = data.name;
        lastname.value = data.lastname;
        email.value = data.email;
        password.value = data.password;
        type.value = data.type;
    });

  document.querySelector("form").addEventListener("submit", (event) => {
    // Prevent the form from submitting
    name = name.value;
    description = description.value;
    price = price.value;

    event.preventDefault();
    fetch(`http://localhost/api/employes/${id}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ name, lastname, email, password, type}),
    }).then((response) => {
      if (response.ok) {
        alert("Employee updated");
        window.location.href = "../";
      } else {
        alert("Error while updating employee");
      }
    });
  });
</script>
